@model BookReadingEvents.ViewModels.CreateEventViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>CreateEventViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @* Title *@
    <div class="form-group">
        @Html.LabelFor(model => model.Event.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Event.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Event.Title, "", new { @class = "text-danger" })
        </div>
    </div>


    @* Date *@
    <div class="form-group">
        @Html.LabelFor(model => model.Event.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="text-muted">Enter in dd/mm/yyyy format</div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Event.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    @* Time *@
    <div class="form-group">
        @Html.LabelFor(model => model.Event.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="text-muted">Enter in HR:MIN format</div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Event.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    @* Description *@
    <div class="form-group">
        @Html.LabelFor(model => model.Event.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Event.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Event.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    @* Duration *@
    <div class="form-group">
        @Html.LabelFor(model => model.Event.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Event.Duration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Event.Duration, "", new { @class = "text-danger" })
        </div>
    </div>

    @* Location *@
    <div class="form-group">
        @Html.LabelFor(model => model.Event.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Event.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Event.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    @*Event Type *@
    <div class="form-group">
        @Html.LabelFor(model => model.Event.TypeOfEvent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Event.TypeOfEvent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Event.Location, "", new { @class = "text-danger" })
        </div>
    </div>


    @* Other Description *@
    <div class="form-group">
        @Html.LabelFor(model => model.Event.OtherDetails, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Event.OtherDetails, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Event.OtherDetails, "", new { @class = "text-danger" })
        </div>
    </div>



    @* Invitees list *@
    <div class="form-group">
        @Html.LabelFor(model => model.Invitees, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Invitees, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Invitees, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
